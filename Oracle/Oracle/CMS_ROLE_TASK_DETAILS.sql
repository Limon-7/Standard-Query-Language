CREATE SEQUENCE  "CMS"."CMS_ROLE_TASK_DETAILS_SEQ"  MINVALUE 1 MAXVALUE 999999999999999999999999999 INCREMENT BY 1 START WITH 10322 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL ;

-- table
 CREATE TABLE "CMS"."CMS_ROLE_TASK_DETAILS" 
   (
	"ROLE_ID" NUMBER(38), 
	"TASK_ID" NUMBER(38), 
	"CREATED_BY" VARCHAR2(30 BYTE), 
	"CREATE_DATE" DATE DEFAULT SYSDATE, 
	"UPDATE_BY" VARCHAR2(30 BYTE), 
	"UPDATE_DATE" DATE, 
	 CONSTRAINT "CMS_ROLE_TASK_DETAILS_PK" PRIMARY KEY ("ROLE_ID","TASK_ID"),
	 CONSTRAINT "CMS_ROLE_TASK_DETAILS_ROLE_ID_FK" FOREIGN KEY("ROLE_ID")   REFERENCES "CMS"."CMS_ROLE_MASTER"("ID") On DELETE CASCADE,  
	 CONSTRAINT "CMS_ROLE_TASK_DETAILS_TASK_ID_FK" FOREIGN KEY("TASK_ID")   REFERENCES "CMS"."CMS_TASK_MASTER"("ID")  On DELETE CASCADE 
   )

   create or replace TRIGGER "CMS"."AUTOID_CMS_ROLE_TASK_DETAILS" 
BEFORE INSERT
ON CMS.CMS_ROLE_TASK_DETAILS 
REFERENCING NEW AS New OLD AS Old
FOR EACH ROW
DECLARE
tmpVar NUMBER;

BEGIN
   tmpVar := 0;

   SELECT CMS_ROLE_TASK_DETAILS_SEQ.NEXTVAL INTO tmpVar FROM dual;
   :NEW.ID := tmpVar;

   EXCEPTION
     WHEN OTHERS THEN
       -- Consider logging the error and then re-raise
       RAISE;
END AUTOID_CMS_ROLE_TASK_DETAILS;